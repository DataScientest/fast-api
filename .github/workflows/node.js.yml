# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Fast-API CI
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]


jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        name: fast-api
        path: fast-api.tar
    - name: Build the Docker image
      run: | 
        docker build -t fallewi/fast-api:$(date +%s) .
        docker images
        docker save fallewi/fast-api:$(date +%s) > fast-api.tar
  push:
    needs: build
    runs-on: ubuntu-latest
    steps:
      with:
      name: fast-api
    - name: Docker login & push
      run: |
        docker load < fast-api.tar
        docker images
        docker login -u ${{ secrets.REGISTRY_USER  }} -p ${{ secrets.REGISTRY_PASSWD  }}
        docker push docker.io/fallewi/fast-api:$(date +%s)


  deploy:
    needs: push
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v2 
      - name: Deploy in EC2
        env:
            PRIVATE_KEY: ${{ secrets.AWS_PRIVATE_KEY  }}
            HOSTNAME : ${{ secrets.HOSTNAME  }}
            USER_NAME : ${{ secrets.USER_NAME  }}
            
        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME}
          rm -Rf fast-api 
          mkdir fast-api 
          cd fast-api 
          git checkout master 
          git fetch --all 
          git reset --hard origin/master 
          git pull origin master 
          ls 
          # docker-compose -f docker-compose.prod.yml up -d --build 
          docker run -p 9000:8000 --name fastapi docker.io/fallewi/fast-api:$(date +%s)
          docker ps
          









